servers = (
  {
    address = "irc.fc00.io";
    chatnet = "Hype";
    autoconnect = "Yes";
  },
  {
    address = "openfoodfacts.irc.slack.com";
    chatnet = "Slack";
    port = "6667";
    password = "openfoodfacts.MDYCtwvc5L3ajoshrJmV";
    use_ssl = "yes";
    ssl_verify = "yes";
    autoconnect = "no";
  },
  {
    address = "chat.freenode.net";
    chatnet = "Freenode";
    autoconnect = "Yes";
  },
  { address = "eu.irc6.net"; chatnet = "IRCnet"; port = "6667"; },
  { address = "open.ircnet.net"; chatnet = "IRCnet"; port = "6667"; },
  { address = "irc.efnet.org"; chatnet = "EFNet"; port = "6667"; },
  { 
    address = "irc.undernet.org";
    chatnet = "Undernet";
    port = "6667";
  },
  { address = "irc.dal.net"; chatnet = "DALnet"; port = "6667"; },
  { 
    address = "irc.quakenet.org";
    chatnet = "QuakeNet";
    port = "6667";
  },
  { address = "irc.oftc.net"; chatnet = "OFTC"; port = "6667"; },
  {
    address = "irc.gamesurge.net";
    chatnet = "GameSurge";
    port = "6667";
  },
  { address = "irc.webchat.org"; chatnet = "WebChat"; port = "6667"; },
  { address = "irc.rizon.net"; chatnet = "Rizon"; port = "6667"; },
  { address = "irc.link-net.org"; chatnet = "LinkNet"; port = "6667"; },
  { address = "silc.silcnet.org"; chatnet = "SILC"; port = "706"; },
  {
    address = "irc.gitter.im";
    chatnet = "Gitter";
    nick = "woshilapin";
    password = "c5afebdfac273527b0aa201fe0c90cfebe7098d7";
    port = "6667";
    use_ssl = "yes";
    ssl_verify = "yes";
    autoconnect = "no";
  },
  {
    address = "irc.mozilla.org";
    chatnet = "Mozilla";
    port = "6697";
    use_ssl = "yes";
    ssl_verify = "no";
    autoconnect = "yes";
  }
);

chatnets = {
  Hype = { type = "IRC"; };
  Freenode = {
    type = "IRC";
    max_kicks = "4";
    max_msgs = "5";
    max_whois = "4";
    max_query_chans = "5";
  };
  IRCnet = {
    type = "IRC";
    max_kicks = "4";
    max_msgs = "5";
    max_whois = "4";
    max_query_chans = "5";
  };
  EFNet = { 
    type = "IRC";
    max_kicks = "4";
    max_msgs = "3";
    max_whois = "1";
  };
  Undernet = {
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  DALnet = {
    type = "IRC";
    max_kicks = "4";
    max_msgs = "3";
    max_whois = "30";
  };
  QuakeNet = {
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  OFTC = { 
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  GameSurge = {
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  WebChat = {
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  Rizon = { 
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  LinkNet = {
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  SILC = { type = "SILC"; };
  Slack = { type = "IRC"; };
  gitter = { type = "IRC"; };
  Mozilla = {
    type = "IRC";
    max_kicks = "4";
    max_msgs = "5";
    max_whois = "4";
    max_query_chans = "5";
  };
};

channels = (
  { name = "#xwiki"; chatnet = "Freenode"; autojoin = "Yes"; },
  { name = "#xwiki-labs"; chatnet = "Freenode"; autojoin = "No"; },
  { name = "#limsi"; chatnet = "Freenode"; autojoin = "Yes"; },
  { name = "#wehost"; chatnet = "Freenode"; autojoin = "Yes"; },
  { name = "#xwiki/public"; chatnet = "Gitter"; autojoin = "No"; },
  { name = "#alumsi"; chatnet = "Freenode"; autojoin = "No"; },
  { name = "#cjdns"; chatnet = "Hype"; autojoin = "Yes"; },
  { name = "#paris"; chatnet = "Hype"; autojoin = "Yes"; },
  { name = "#hyperboria"; chatnet = "Hype"; autojoin = "No"; },
  { name = "#archlinux-fr"; chatnet = "Freenode"; autojoin = "No"; },
  { name = "#irssi"; chatnet = "ircnet"; autojoin = "No"; },
  { name = "silc"; chatnet = "silc"; autojoin = "No"; },
  { name = "#firefoxos"; chatnet = "Slack"; autojoin = "yes"; },
  { name = "#servo"; chatnet = "Mozilla"; autojoin = "yes"; },
  { name = "#rust-beginners"; chatnet = "Mozilla"; autojoin = "yes"; },
  { name = "#rust"; chatnet = "Mozilla"; autojoin = "yes"; }
);

aliases = {
  J = "join";
  WJOIN = "join -window";
  WQUERY = "query -window";
  LEAVE = "part";
  BYE = "quit";
  EXIT = "quit";
  SIGNOFF = "quit";
  DESCRIBE = "action";
  DATE = "time";
  HOST = "userhost";
  LAST = "lastlog";
  SAY = "msg *";
  WI = "whois";
  WII = "whois $0 $0";
  WW = "whowas";
  W = "who";
  N = "names";
  M = "msg";
  T = "topic";
  C = "clear";
  CL = "clear";
  K = "kick";
  KB = "kickban";
  KN = "knockout";
  BANS = "ban";
  B = "ban";
  MUB = "unban *";
  UB = "unban";
  IG = "ignore";
  UNIG = "unignore";
  SB = "scrollback";
  UMODE = "mode $N";
  WC = "window close";
  WN = "window new hide";
  SV = "say Irssi $J ($V) - http://irssi.org/";
  GOTO = "sb goto";
  CHAT = "dcc chat";
  RUN = "SCRIPT LOAD";
  CALC = "exec - if command -v bc >/dev/null 2>&1\\; then printf '%s=' '$*'\\; echo '$*' | bc -l\\; else echo bc was not found\\; fi";
  SBAR = "STATUSBAR";
  INVITELIST = "mode $C +I";
  Q = "QUERY";
  "MANUAL-WINDOWS" = "set use_status_window off;set autocreate_windows off;set autocreate_query_level none;set autoclose_windows off;set reuse_unused_windows on;save";
  EXEMPTLIST = "mode $C +e";
  ATAG = "WINDOW SERVER";
  UNSET = "set -clear";
  RESET = "set -default";
};

statusbar = {
  # formats:
  # when using {templates}, the template is shown only if it's argument isn't
  # empty unless no argument is given. for example {sb} is printed always,
  # but {sb $T} is printed only if $T isn't empty.

  items = {
    # start/end text in statusbars
    barstart = "{sbstart}";
    barend = "{sbend}";

    topicbarstart = "{topicsbstart}";
    topicbarend = "{topicsbend}";

    # treated "normally", you could change the time/user name to whatever
    time = "{sb $Z}";
    user = "%4{sb {sbnickmode $cumode}%9$N%9{sbmode $usermode} %b%0{sbaway $A}}";


    # treated specially .. window is printed with non-empty windows,
    # window_empty is printed with empty windows
    window = "{sb $tag/$itemname{sbmode $M}}%C%n ";
    window_empty = "{sb {sbservertag $tag}}";
    prompt = "{prompt $[.15]itemname}";
    prompt_empty = "{prompt $winname}";

    topic = " $topic";
    topic_empty = " Irssi v$J - http://www.irssi.org";

    # all of these treated specially, they're only displayed when needed
    # Powerline
    lag = "{sb %r%w%1 ⌚ $0 %r%0%n}";
    act = "{sb %y%0%n%3 %F$0%F %n}";
    more = "%c%0%n%6 more ⬇ %c%0%n";


  };

  # there's two type of statusbars. root statusbars are either at the top
  # of the screen or at the bottom of the screen. window statusbars are at
  # the top/bottom of each split window in screen.
  default = {
    # the "default statusbar" to be displayed at the bottom of the window.
    # contains all the normal items.
    window = {
      disabled = "no";

      # window, root
      type = "window";
      # top, bottom
      placement = "bottom";
      # number
      position = "1";
      # active, inactive, always
      visible = "active";

      # list of items in statusbar in the display order
      items = {
        barstart = { priority = "100"; };
        user = { };
        window = { };
        window_empty = { };
        lag = { priority = "-1"; };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
        otr = { };
        usercount = { };
      };
    };

    # statusbar to use in inactive split windows
    window_inact = {

      type = "window";
      placement = "bottom";
      position = "1";
      visible = "inactive";

      items = {
        barstart = { priority = "100"; };
        window = { };
        window_empty = { };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # we treat input line as yet another statusbar :) It's possible to
    # add other items before or after the input line item.
    prompt = {

      type = "root";
      placement = "bottom";
      # we want to be at the bottom always
      position = "100";
      visible = "always";

      items = {
        prompt = { priority = "-1"; };
        prompt_empty = { priority = "-1"; };
        # treated specially, this is the real input line.
        input = { priority = "10"; };
      };
    };

    # topicbar
    topic = {

      type = "root";
      placement = "top";
      position = "1";
      visible = "always";

      items = {
        topicbarstart = { priority = "100"; };
        topicbarend = { priority = "100"; alignment = "right"; };
        topic = { };
        topicempty = { };
      };
    };
    awl_0 = {
      items = {
        barstart = { priority = "100"; };
        awl_0 = { };
        barend = { priority = "100"; alignment = "right"; };
      };
    };
    awl_1 = {
      items = {
        barstart = { priority = "100"; };
        awl_1 = { };
        barend = { priority = "100"; alignment = "right"; };
      };
    };
  };
};
settings = {
  core = {
    real_name = "woshilapin";
    user_name = "woshilapin";
    nick = "woshilapin";
    recode_out_default_charset = "UTF-8";
    recode_fallback = "ISO-8859-15";
  };
  "fe-text" = { actlist_sort = "refnum"; };
  "fe-common/core" = {
    theme = "scripts/irssi-powerline/solarized-powerline";
    hilight_color = "%R";
    beep_msg_level = "MSGS DCC DCCMSGS HILIGHT";
    term_charset = "UTF-8";
  };
  "perl/core/scripts" = {
    ### For Solarized adv_windowlist.pl script
    awl_block = "-20";
    awl_sbar_maxlength = "on";
    awl_hide_empty = "yes";
    awl_mouse = "yes";
    awl_viewer = "no";
    #fancy_abbrev = "head";

    ### For Solarized trackbar.pl script
    trackbar_style = "%B";
    title_screen_window = "yes";
    awl_shared_sbar = "OFF";
  };
};
ignores = ( { level = "MODES"; servertag = "Slack"; } );
keyboard = ( 
  { key = "meta-[M"; id = "command"; data = "mouse_xterm"; }
);
